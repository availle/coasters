plugins {
    id "idea"
    id "groovy"
    id "com.energizedwork.webdriver-binaries" version "1.4"
    id "com.energizedwork.idea-base" version "1.4"
}
repositories {
    mavenCentral()
}

// The drivers we want to use
ext.drivers = ["chrome"]

ext {
    groovyVersion = '2.4.12'
    gebVersion = '2.1'
    seleniumVersion = '3.6.0'
    chromeDriverVersion = '2.32'
    geckoDriverVersion = '0.18.0'
}

dependencies {

    // If using Spock, need to depend on geb-spock
    testCompile "org.gebish:geb-spock:$gebVersion"
    testCompile("org.spockframework:spock-core:1.1-groovy-2.4") {
        exclude group: "org.codehaus.groovy"
    }
    testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"



    // If using JUnit, need to depend on geb-junit (3 or 4)
    testCompile "org.gebish:geb-junit4:$gebVersion"
    testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"

    // Drivers
    drivers.each { driver ->
        testCompile "org.seleniumhq.selenium:selenium-$driver-driver:$seleniumVersion"
    }
}

/**
 *    // If using Spock, need to depend on geb-spock
 testCompile "org.gebish:geb-spock:$gebVersion"
 testCompile("org.spockframework:spock-core:1.0-groovy-2.4") {
 exclude group: "org.codehaus.groovy"
 }
 testCompile "org.codehaus.groovy:groovy-all:$groovyVersion"

 // If using JUnit, need to depend on geb-junit (3 or 4)
 testCompile "org.gebish:geb-junit4:$gebVersion"

 // Drivers
 testCompile "org.seleniumhq.selenium:selenium-chrome-driver:$seleniumVersion"
 testCompile "org.seleniumhq.selenium:selenium-firefox-driver:$seleniumVersion"

 */

drivers.each { driver ->
    task "${driver}Test"(type: Test) {
        group JavaBasePlugin.VERIFICATION_GROUP

        outputs.upToDateWhen { false }  // Always run tests


        systemProperty "geb.build.reportsDir", reporting.file("$name/geb")
        systemProperty "geb.env", driver

        // If you wanted to set the baseUrl in your buildâ€¦
        // systemProperty "geb.build.baseUrl", "http://myapp.com"
    }
}

test {
	dependsOn drivers.collect { tasks["${it}Test"] }
	enabled = false
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.7'
}

tasks.withType(Test) {
    maxHeapSize = "1g"
    jvmArgs '-XX:MaxMetaspaceSize=128m'
    testLogging {
        exceptionFormat = 'full'
    }
}